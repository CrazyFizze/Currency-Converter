/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package currencyconverter;

/**
 *
 * @author Radek
 */
public class MainConverter extends javax.swing.JFrame {
        double USD_value_PLN = 3.58; //From PLN to Dollar
        double PLN_value_DOL = 0.28;   //From Dollar to PLN
        double PLN_value_EUR = 0.23;   //From PLN to EUR
        double EUR_value_PLN = 4.28;   //From EUR to PLN
        double PLN_value_GBP = 0.21;   //From PLN to GBP
        double GBP_value_PLN = 4.86;   //From GBP to PLN
        double USD_value_EUR = 0.84; //From $ to EUR
        double EUR_value_USD = 1.19; //From EUR to $
        double USD_value_GBP = 0.74;//From $ to GBP
        double GBP_value_USD = 1.36; //From GBP to $
        double GBP_value_EUR = 1.14;//From GBP to EUR
        double EUR_value_GBP = 0.88;//From EUR to GBP

    /**
     * Creates new form MainConverter
     */
    public MainConverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        ChoiceOfCurrency = new javax.swing.JComboBox<>();
        AreaOfCurrency = new javax.swing.JTextField();
        Result = new javax.swing.JTextField();
        Convertsion = new javax.swing.JButton();
        Reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setFont(new java.awt.Font("Montserrat Alternates Light", 2, 24)); // NOI18N
        jTextField1.setText("Currency Converter");
        jTextField1.setToolTipText("");
        jTextField1.setBorder(null);
        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        ChoiceOfCurrency.setFont(new java.awt.Font("Source Sans Pro Light", 0, 18)); // NOI18N
        ChoiceOfCurrency.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "From PLN to USD", "From USD to PLN", "From PLN to EUR", "From EUR to PLN", "From PLN to GBP", "From GBP to PLN", "From USD to EUR", "From EUR to USD", "From USD to GBP", "From GBP to USD", "From USD to GBP", "From EUR to GBP", "From GBP to EUR" }));

        Result.setBackground(new java.awt.Color(204, 204, 204));
        Result.setFont(new java.awt.Font("Source Sans Pro Light", 0, 36)); // NOI18N

        Convertsion.setText("Convert");
        Convertsion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConvertsionActionPerformed(evt);
            }
        });

        Reset.setText("Reset");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ChoiceOfCurrency, 0, 233, Short.MAX_VALUE)
                    .addComponent(Result))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AreaOfCurrency, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Convertsion, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Reset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChoiceOfCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AreaOfCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Result, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Convertsion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Reset)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void ConvertsionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConvertsionActionPerformed
        // Here we will create our main system of convertsion
        
        //The convert - From PLN TO USD
        double OurCurrentCurrency = Double.parseDouble(AreaOfCurrency.getText());
        if (ChoiceOfCurrency.getSelectedItem().equals("From PLN to Dollar"))
        {
            String final_resultat = String.format("$ &.2f", OurCurrentCurrency * PLN_value_DOL);
            Result.setText(final_resultat);
        }
        //The convert - From USD TO PLN
        if (ChoiceOfCurrency.getSelectedItem().equals("From Dollar to PLN"))
        {
            String final_resultat = String.format("PLN &.2f", OurCurrentCurrency * USD_value_PLN);
            Result.setText(final_resultat);
        }
        //The convert - From PLN TO EURO
        if (ChoiceOfCurrency.getSelectedItem().equals("From PLN to EUR"))
        {
            String final_resultat = String.format("€ &.2f", OurCurrentCurrency * PLN_value_EUR);
            Result.setText(final_resultat);
        }
        //The Convert - From Euro TO PLN
        if (ChoiceOfCurrency.getSelectedItem().equals("From EUR to PLN"))
        {
            String final_resultat = String.format("PLN &.2f", OurCurrentCurrency * EUR_value_PLN);
            Result.setText(final_resultat);
        }
        //The Convert - From PLN TO GBP
        if (ChoiceOfCurrency.getSelectedItem().equals("From PLN to GBP"))
        {
            String final_resultat = String.format("£ &.2f", OurCurrentCurrency * PLN_value_GBP);
            Result.setText(final_resultat);
        }
        //The Convert - From GBP TO PLN
        if (ChoiceOfCurrency.getSelectedItem().equals("From GBP to PLN"))
        {
            String final_resultat= String.format("PLN &.2f", OurCurrentCurrency * GBP_value_PLN);
            Result.setText(final_resultat);
        }
        //The Convert - From Dollar TO EURO
        if (ChoiceOfCurrency.getSelectedItem().equals("From USD to EUR"))
        {
            String final_resultat = String.format("€ &.2f", OurCurrentCurrency * USD_value_EUR);
            Result.setText(final_resultat);
                    
        }
        //The Convert - From EURO TO DOLLAR
        if (ChoiceOfCurrency.getSelectedItem().equals("From EUR to USD"))
        {
            String final_resultat = String.format ("$ &.2f", OurCurrentCurrency * EUR_value_USD);
            Result.setText(final_resultat);
        }
        //The Convert - From Dollar TO GBP
        if (ChoiceOfCurrency.getSelectedItem().equals("From USD to GBP"))
        {
            String final_resultat = String.format ("£ &.2f", OurCurrentCurrency * USD_value_GBP);
            Result.setText(final_resultat);
        }
        //The Convert - From GBP TO Dollar
        if (ChoiceOfCurrency.getSelectedItem().equals("From GBP to USD"))
        {
            String final_resultat = String.format ("$ &.2f", OurCurrentCurrency * GBP_value_USD);
            Result.setText(final_resultat);
            
        }
        //The Convert - From EURO TO GBP
        if (ChoiceOfCurrency.getSelectedItem().equals("From EUR to GBP"))
        {
            String final_resultat = String.format ("£ &.2f", OurCurrentCurrency * EUR_value_GBP);
            Result.setText (final_resultat);
                    
        }
        //The Convert - From GBP to EURO
        if (ChoiceOfCurrency.getSelectedItem().equals("From GBP to EUR"))
        {
            String final_resultat = String.format ("€ &.2f", OurCurrentCurrency * GBP_value_EUR);
            Result.setText (final_resultat);
        }
    }//GEN-LAST:event_ConvertsionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AreaOfCurrency;
    private javax.swing.JComboBox<String> ChoiceOfCurrency;
    private javax.swing.JButton Convertsion;
    private javax.swing.JButton Reset;
    private javax.swing.JTextField Result;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
